20240201
安装最新版 pytorch: 2.2.0+cu118
    pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118 -U
注册 closeai 账号
在 windows 环境变量中增加 OPENAI_API_KEY 和 OPENAI_BASE_URL="https://api.closeai-proxy.xyz/v1"
同步 git 库
pip install torchdata torchtext tiktoken langchain openai watermark -U
完成 C1, H1.ipynb
有时候忽然找不到 dll，优先看一下 360 杀毒软件是否禁止某些文件访问了，从隔离区恢复即可

20240202
几种 norm 的实现：https://www.bilibili.com/video/BV1Pq4y1a7pH/
一些工具函数的编写

20240203
No module named 'regex._regex'
    pip uninstall regex
    pip install regex
完成3D可视化大语言模型的学习: https://www.mlpod.com/llm-visualization.php
增加 openai 生成图片接口的调用调试
jupyter 界面字体调整：D:\anaconda3\Lib\site-packages\notebook\static\custom\custom.css
对 C2.ipynb 的复现，主要关注思维链，思维树，tool calling 等

20240204
将 openAI client 置成单例
完成 C2, H2.ipynb
打通本机 whisper 音频转化文字的功能（其实 openAI 本身也开放了音频转文字的接口：https://www.openaidoc.com.cn/docs/guides/speech-to-text）
    https://www.bilibili.com/video/BV1r14y1H7hE
    pip install ffmpeg-python openai-whisper
    更新 numba，否则会有 from numba.np.ufunc import _internal SystemError: initialization of _internal failed without raising an exception 的问题
        pip uninstall numba
            中间会报错：Cannot uninstall 'llvmlite'，直接物理删除即可：https://blog.csdn.net/weixin_43535207/article/details/104385743
        pip install numba
    ffmpeg 安装：https://blog.csdn.net/m0_47449768/article/details/130102406
    简繁转换：pip install zhconv
edge_tts：文字转语音，实际上背后是调用微软的Azure Cognitive Services来实现文本到语音转换（TTS），因此必须联网
    https://www.bilibili.com/read/cv22865124/
    pip install edge_tts

20240205
利用 sounddevice 完成音频录制功能（pyaudio 试过但不确定为什么不可用）
按照 README.md 和 https://microsoft.github.io/AirSim/build_windows/ 安装 AirSim 环境，并跑通实例
    注意一个细节是 drone 飞往某个地方之前，必须要 takeoff，但只要调用一次即可，为了让 chatgpt 知道这一点，在 user_prompt 中赋予了实例，但感觉有些冗余
    遇到了模拟器和 python 代码不能连接的问题，感觉是 msgpack-rpc-python 的问题，尝试了一些办法没有效果，但最后重启电脑发现可行

20240206
利用 tkinter 实现简单的录音界面，注意录音一定要放在另外一个线程里面，否则会阻塞 tkinter 的运行
将录音功能和 chatgpt_airsim 结合，利用双进程通讯，实现语音操控

20240217
cs231n_2017, 1 ~ 3

20240218
cs231n_2017, 4

TODO: OPENAI 开发文档
TODO: 魔塔使用文档，https://modelscope.cn/my/overview
    https://modelscope.cn/models/ZhipuAI/chatglm3-6b/files
TODO: faiss 安装调试

千城:
https://zhuanlan.zhihu.com/p/642845401
https://zhuanlan.zhihu.com/p/661465330
https://zhuanlan.zhihu.com/p/682253496

1.使用chatgpt3.5 4.0 生成提示词的数据
2.使用chatglm3-6b微调训练 lora
3.使用RAG检索增强 在提示词中加入上下文 给出提示增强

RAG
往前面飞2 向量数据库 3个相关的问题
    1.向前面飞 80%
    答案 python\naw.takeoff()\n```\nThis code uses the `takeoff()` function to command the drone to take off and start flying.
    2. 飞向前面 75%

显存12G 16G lora

可以使用句子转换模型 SentenceTransformer all-MiniLM-L6-v2
    https://zhuanlan.zhihu.com/p/285123172
    https://zhuanlan.zhihu.com/p/457876366
也可以使用 tf-ide 等等
    https://blog.csdn.net/weixin_43758551/article/details/113918690
    https://zhuanlan.zhihu.com/p/113017752

1：如何设计实验，来验证微调更好，在加上 rag 更更好，注意不要有信息泄露。
    因为都是生成 python 代码，因此可以严格比较代码是否相同
    100 微调
        微调前（能力弱，几乎不能生成代码）
        微调后（是否具备了过拟合能力）
    10 测试（无泄漏，是否可以泛化）
        rag 效果：+100 相似度 1.0、0.9、0.8、0.7、0.6、0.5、0.4、0.3、0.2、0.1
2：熟悉 chatglm3 和 微调训练 lora
    https://github.com/THUDM/ChatGLM3
3：词嵌入 + langChain + faiss + RAG 检索

